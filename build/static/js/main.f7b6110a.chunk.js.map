{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","type","placeholder","onChange","handleChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAIaA,G,YAAO,SAACC,GAAD,OAClB,yBAAKC,UAAU,kBACb,yBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,4BAAKL,EAAMI,QAAQE,MACnB,2BAAIN,EAAMI,QAAQG,UCHTC,EAAW,SAACR,GAAD,OACpB,yBAAKC,UAAU,aACVD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCL/BQ,G,MAAY,SAACZ,GAAD,OACvB,2BACAa,KAAK,SACLC,YAAY,iBACZC,SAAUf,EAAMgB,aAChBf,UAAU,iBCgCGgB,G,wDAlCb,aAAc,IAAD,8BACX,gBAaFD,aAAe,SAACE,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,oBAOxC,WACE,MAAgCC,KAAKN,MAA9Bd,EAAP,EAAOA,SAAUW,EAAjB,EAAiBA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,yBAAK/B,UAAU,OACb,8CACA,kBAAC,EAAD,CAAWe,aAAca,KAAKb,eAC9B,kBAAC,EAAD,CAAUP,SAAUqB,S,GA7BVI,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7b6110a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.style.css';\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n)","import React from \"react\";\nimport './card-list.style.css';\n\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => (\n    <div className='card-list'>          \n        {props.monsters.map(monster=> (\n            <Card key={monster.id} monster={monster}/>\n        ))}   \n    </div>\n)","import React from 'react'\nimport './search-box.style.css'\n\nexport const SearchBox = (props) => (\n  <input \n  type=\"search\" \n  placeholder=\"search monster\" \n  onChange={props.handleChange} \n  className=\"search-box\"\n  />\n)","import React from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(user => this.setState({monsters:user}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  };\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())  \n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Finder</h1>\n        <SearchBox handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}